{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../notification.service\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/button\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(auth, router, notificationService) {\n      this.auth = auth;\n      this.router = router;\n      this.notificationService = notificationService;\n      this.loginForm = new FormGroup({\n        email: new FormControl(null, [Validators.required]),\n        password: new FormControl(null, [Validators.required])\n      });\n    }\n\n    get email() {\n      var _a;\n\n      if (this.loginForm.get('email')) {\n        return (_a = this.loginForm.get('email')) === null || _a === void 0 ? void 0 : _a.value.toLowerCase();\n      }\n\n      return null;\n    }\n\n    get password() {\n      var _a;\n\n      if (this.loginForm.get('password')) {\n        return (_a = this.loginForm.get('password')) === null || _a === void 0 ? void 0 : _a.value;\n      }\n\n      return null;\n    }\n\n    signIn() {\n      this.auth.loggedIn().subscribe(res => {\n        if (res[\"logged_in\"]) {\n          this.notificationService.error$.next(\"You are already logged in, please log out before attempting to log in with a different account\");\n        }\n      });\n\n      if (this.email && this.password) {\n        this.auth.login(this.email, this.password).subscribe(res => {\n          if (res[\"match\"]) {\n            if (res[\"profile\"].profile_type == \"candidate\") {\n              this.router.navigate(['/candidate-profile']);\n            } else if (res[\"profile\"].profile_type == \"employer\") {\n              this.router.navigate(['/employer-profile']);\n            } else {\n              this.router.navigate(['/choose-profile']);\n            }\n          }\n        });\n      }\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.NotificationService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 18,\n    vars: 1,\n    consts: [[1, \"login-wrapper\"], [\"id\", \"login-card\", 1, \"box\"], [\"id\", \"login-form\", 3, \"formGroup\"], [\"appearance\", \"fill\", 1, \"input\"], [\"matInput\", \"\", \"formControlName\", \"email\"], [\"type\", \"password\", \"matInput\", \"\", \"formControlName\", \"password\"], [\"id\", \"actions\"], [\"id\", \"submit\", \"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\", 1);\n        i0.ɵɵelementStart(2, \"mat-card-header\");\n        i0.ɵɵelementStart(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Log in to Robert's List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 2);\n        i0.ɵɵelementStart(6, \"mat-card-content\");\n        i0.ɵɵelementStart(7, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-card-actions\", 6);\n        i0.ɵɵelementStart(16, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_16_listener() {\n          return ctx.signIn();\n        });\n        i0.ɵɵtext(17, \"Log in\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      }\n    },\n    directives: [i4.MatCard, i4.MatCardHeader, i4.MatCardTitle, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i4.MatCardContent, i6.MatFormField, i6.MatLabel, i7.MatInput, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i4.MatCardActions, i8.MatButton],\n    styles: [\"#login-form[_ngcontent-%COMP%]{min-width:150px;max-width:300px;width:100%;margin:auto}.mat-card[_ngcontent-%COMP%]{max-width:400px;margin:10% auto auto}.input[_ngcontent-%COMP%]{display:block;width:100%;padding-top:1rem}#submit[_ngcontent-%COMP%]{width:50%}#actions[_ngcontent-%COMP%]{text-align:center}.mat-card-header[_ngcontent-%COMP%]{justify-content:center;padding:1rem}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}