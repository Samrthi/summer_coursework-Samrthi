{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { Candidate } from \"./candidate\";\nimport { Employer } from \"./employer\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./storage.service\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router, storage) {\n      this.http = http;\n      this.router = router;\n      this.storage = storage;\n    }\n\n    login(email, password) {\n      let credentials = {\n        email: email,\n        password: password\n      };\n      const options = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post('/api/login', credentials, options);\n    }\n\n    logout() {\n      this.router.navigate(['/login']);\n      return this.http.get('/api/logout');\n    }\n\n    signup(email, password) {\n      let credentials = {\n        email: email,\n        password: password\n      };\n      const options = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return this.http.post('/api/add-user', credentials, options);\n    }\n\n    addProfile(profile_type) {\n      const options = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      let profile = {\n        profile_type: profile_type,\n        id: null\n      };\n\n      if (profile_type == \"candidate\") {\n        this.storage.addCandidate(new Candidate(\"Mystery Candidate\")).subscribe(res => {\n          // @ts-ignore\n          profile.id = res.profile_id;\n          this.router.navigate(['/candidate-profile']);\n          return this.http.post('/api/add-profile', profile, options);\n        });\n      } else if (profile_type == \"employer\") {\n        this.storage.addEmployer(new Employer(\"Mystery Employer\")).subscribe(res => {\n          // @ts-ignore\n          profile.id = res.profile_id;\n          this.router.navigate(['/employer-profile']);\n          return this.http.post('/api/add-profile', profile, options);\n        });\n      } else {// error\n      }\n\n      return null;\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.StorageService));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}