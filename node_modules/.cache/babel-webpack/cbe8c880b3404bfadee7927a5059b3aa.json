{"ast":null,"code":"import { map, take, tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(auth, router) {\n      this.auth = auth;\n      this.router = router;\n    }\n\n    canActivate(route, state) {\n      return this.auth.loggedIn();\n      this.auth.loggedIn().subscribe(res => {\n        if (!res) {\n          console.log('not logged in, access denied');\n          this.router.navigate(['unauthenticated']);\n        }\n      });\n      return this.auth.loggedIn().pipe(take(1), map(res => !!res), tap(loggedIn => {\n        if (!loggedIn) {\n          console.log('not logged in, access denied');\n          this.router.navigate(['unauthenticated']);\n        }\n      }));\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}